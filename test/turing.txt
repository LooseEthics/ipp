.IPPcode22
DEFVAR GF@tur
DEFVAR GF@turptr
DEFVAR GF@statemap
DEFVAR GF@statecnt
DEFVAR GF@memsize
DEFVAR GF@mem
DEFVAR GF@state
DEFVAR GF@ptr
DEFVAR GF@step
DEFVAR GF@read
DEFVAR GF@wrt
DEFVAR GF@sindex
DEFVAR GF@sread
DEFVAR GF@move
DEFVAR GF@total
JUMP bb5

LABEL bb4
# 4 state busy beaver - 107 steps, output 13, ptr span(-10, 3) from start
MOVE GF@tur string@1rb1lb1la0lc1rh1ld1rd0ra
MOVE GF@statemap string@abcd
MOVE GF@memsize int@20
JUMP run

LABEL bb5
# 5 state busy beaver - 47 176 870 steps, output 4098, ptr span(-12243, 45) from start
# ~1.6 billion ipp instructions, takes about 3 hours for me
MOVE GF@tur string@1rb1lc1rc1rb1rd0le1la1ld1rh0la
MOVE GF@statemap string@abcde
MOVE GF@memsize int@13000
JUMP run

LABEL run
MOVE GF@mem string@
MOVE GF@ptr int@0
STRLEN GF@statecnt GF@statemap

LABEL mem_ctor_loop
CONCAT GF@mem GF@mem string@0
ADD GF@ptr GF@ptr int@1
JUMPIFNEQ mem_ctor_loop GF@ptr GF@memsize

#WRITE string@Memory\032ctor\032over\010
GETCHAR GF@state GF@statemap int@0
MOVE GF@ptr int@0
MOVE GF@step int@0

LABEL mainloop
#BREAK
ADD GF@step GF@step int@1
#WRITE GF@step
#WRITE string@\010

# read symbol from mem
GETCHAR GF@read GF@mem GF@ptr
STRI2INT GF@read GF@read int@0
SUB GF@read GF@read int@48

# get index of current state
MOVE GF@sindex int@0
LABEL sindexloop
GETCHAR GF@sread GF@statemap GF@sindex
JUMPIFEQ sindexend GF@sread GF@state
ADD GF@sindex GF@sindex int@1
JUMPIFEQ failstate GF@sindex GF@statecnt
JUMP sindexloop
LABEL sindexend

# get new cell value from tur
MUL GF@turptr GF@sindex int@2
ADD GF@turptr GF@turptr GF@read
MUL GF@turptr GF@turptr int@3
GETCHAR GF@wrt GF@tur GF@turptr
SETCHAR GF@mem GF@ptr GF@wrt

# get move instruction from tur (l/r), map it to -1/+1 and move ptr
ADD GF@turptr GF@turptr int@1
GETCHAR GF@move GF@tur GF@turptr
STRI2INT GF@move GF@move int@0
SUB GF@move GF@move int@111
IDIV GF@move GF@move int@3
ADD GF@ptr GF@ptr GF@move

# correct ptr overflow
JUMPIFEQ ptr_over GF@ptr GF@memsize
JUMPIFEQ ptr_under GF@ptr int@-1
JUMP newstate

LABEL ptr_over
SUB GF@ptr GF@ptr GF@memsize
JUMP newstate

LABEL ptr_under
ADD GF@ptr GF@ptr GF@memsize

# get new state from tur
LABEL newstate
ADD GF@turptr GF@turptr int@1
GETCHAR GF@state GF@tur GF@turptr

# loop until halting state
JUMPIFNEQ mainloop GF@state string@h

# count ones
MOVE GF@ptr int@0
MOVE GF@total int@0
LABEL cntloop
GETCHAR GF@read GF@mem GF@ptr
ADD GF@ptr GF@ptr int@1
JUMPIFEQ cntloop GF@read string@0
ADD GF@total GF@total int@1
JUMPIFEQ cntend GF@ptr GF@memsize
JUMP cntloop
LABEL cntend

# write stats
WRITE string@Total\032ones\032produced:\032
WRITE GF@total
WRITE string@\010Total\032steps\032taken:\032
WRITE GF@step
WRITE string@\010Final\032memory\032state:\010
WRITE GF@mem
WRITE string@\010
JUMP end

LABEL failstate
WRITE string@Invalid\032state\032found:\032
WRITE GF@state
WRITE string@\010
LABEL end

